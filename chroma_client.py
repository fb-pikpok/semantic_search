import asyncio
import json
import chromadb


input_path = r'S:\SID\Analytics\Working Files\Individual\Florian\Projects\semantic_search\Data\db_embedded.json'

async def create_and_populate():
    # Connect to the Chroma server
    client = await chromadb.AsyncHttpClient(host="localhost", port=8000)

    # Chroma will infer dimension from first insert:
    collection = await client.create_collection(name="Test")

    # Read JSON data from disk
    with open(input_path, "r", encoding="utf-8") as f:
        data = json.load(f)

        batch_size = 100

        # We'll loop through the data in batches.
        for start_idx in range(0, len(data), batch_size):
            print(f"Adding batch starting at index {start_idx}...")
            batch = data[start_idx: start_idx + batch_size]

            embeddings = []
            documents = []
            metadatas = []
            ids = []

            for i, entry in enumerate(batch):
                # Generate a unique ID: combine the batchâ€™s start plus the position within the batch
                unique_id = f"doc_{start_idx + i}"
                ids.append(unique_id)

                embeddings.append(entry["embedding"])
                documents.append(entry.get("review_text", ""))

                # Store all additional information as metadata
                metadata = {
                    "recommendationid": entry["recommendationid"],
                    "app_id_name": entry["app_id_name"],
                    "playtime_at_review_minutes": entry["playtime_at_review_minutes"],
                    "last_played": entry["last_played"],
                    "timestamp_updated": entry["timestamp_updated"],
                    "voted_up": entry["voted_up"],
                    "votes_up": entry["votes_up"],
                    "votes_funny": entry["votes_funny"],
                    "weighted_vote_score": entry["weighted_vote_score"],
                    "steam_purchase": entry["steam_purchase"],
                    "received_for_free": entry["received_for_free"],
                    "written_during_early_access": entry["written_during_early_access"],
                    "language": entry["language"],
                    "topic": entry["topic"],
                    "sentiment": entry["sentiment"],
                    "category": entry["category"],
                    "sentence": entry["sentence"],
                }
                metadatas.append(metadata)

            await collection.add(
                embeddings=embeddings,
                documents=documents,
                metadatas=metadatas,
                ids=ids
            )

        print("All data added successfully.")

#asyncio.run(create_and_populate())


async def test_query():
    print("Querying the collection...")
    # Connect to the running Chroma server
    client = await chromadb.AsyncHttpClient(host="localhost", port=8000)

    # Retrieve (or create) your collection
    collection = await client.get_collection(name="Test")

    # 1) Get the total number of items in the collection
    count = await collection.count()
    print(f"Number of items in 'my_collection': {count}")

    # 2) Query the collection for the top 2 closest matches to a sample embedding
    #    Provide your own embedding here! Must match the dimension & type used when inserting.
    sample_query_embedding = [
        0.05381692200899124,
        -0.020411552861332893,
        0.08312227576971054,
        0.007912520319223404,
        -0.010590780526399612,
        0.027867460623383522,
        0.12616439163684845,
        0.02846147119998932,
        -0.037164345383644104,
        0.02683691494166851,
        0.020253317430615425,
        0.015136473812162876,
        -0.015588621608912945,
        0.006604755762964487,
        -0.01894422434270382,
        -0.0822441354393959,
        0.0901244580745697,
        0.0007001807680353522,
        -0.029614677652716637,
        0.015219632536172867,
        -0.05998585373163223,
        0.0220190417021513,
        0.002791062230244279,
        -0.043365657329559326,
        -0.07117915153503418,
        -0.008667361922562122,
        -0.01985081285238266,
        0.029580360278487206,
        0.06275295466184616,
        -0.0621832050383091,
        -0.023474430665373802,
        0.0531439408659935,
        0.15157312154769897,
        -0.03315206244587898,
        -0.049150869250297546,
        -0.0035201385617256165,
        -0.0251221414655447,
        -0.014919573441147804,
        -0.006587729323655367,
        -0.04843471571803093,
        0.01022625807672739,
        -0.012130547314882278,
        0.06867489218711853,
        0.006545383483171463,
        0.008249692618846893,
        0.013133691623806953,
        0.02753296121954918,
        -0.11132846772670746,
        0.044589895755052567,
        0.039971671998500824,
        0.1344812959432602,
        -0.00752435764297843,
        -0.06877145916223526,
        0.01696249283850193,
        0.031137799844145775,
        -0.041477642953395844,
        -0.038087766617536545,
        -0.050859808921813965,
        -0.06200674548745155,
        -0.023722024634480476,
        0.056950487196445465,
        0.024147072806954384,
        -0.036722563207149506,
        -0.015086647123098373,
        0.08417368680238724,
        -0.0826800987124443,
        0.04675121232867241,
        -0.026820730417966843,
        -0.021295754238963127,
        0.03747158125042915,
        -0.05762671306729317,
        -0.055852010846138,
        -0.026673728600144386,
        0.012115384452044964,
        0.008850115351378918,
        0.004736595321446657,
        -0.029036395251750946,
        -0.04821424558758736,
        -0.04111747071146965,
        -0.015025060623884201,
        0.0494794100522995,
        0.019313445314764977,
        0.07102661579847336,
        0.029386065900325775,
        -0.01781144179403782,
        -0.059021737426519394,
        0.01707163266837597,
        -0.023742927238345146,
        -0.012035002000629902,
        0.02740449458360672,
        -0.08132304251194,
        -0.05736331269145012,
        -0.025134384632110596,
        -0.028729122132062912,
        0.014869247563183308,
        0.007060048636049032,
        -0.03364741429686546,
        -0.04723000526428223,
        -0.04864421859383583,
        0.1775803416967392,
        0.005693080369383097,
        0.03838719427585602,
        -0.037351321429014206,
        0.01363863330334425,
        -0.009802454151213169,
        0.05392518267035484,
        -0.08304843306541443,
        0.04606920853257179,
        0.021045224741101265,
        -0.043045856058597565,
        -0.14487893879413605,
        0.02666959911584854,
        0.06584879755973816,
        -0.04589349031448364,
        -0.010284872725605965,
        0.053803034126758575,
        0.029773728922009468,
        0.021312421187758446,
        0.061590928584337234,
        -0.020127441734075546,
        0.06127895414829254,
        -0.010073787532746792,
        0.005653345957398415,
        0.03813314065337181,
        -0.03483680263161659,
        -0.08302400261163712,
        0.015438076108694077,
        -4.265743368175337e-33,
        -0.011011769063770771,
        -0.04504792392253876,
        0.03855554386973381,
        0.03771771490573883,
        -0.0414029136300087,
        0.06555263698101044,
        0.0491422601044178,
        -0.11235157400369644,
        0.0016500391066074371,
        0.04931983724236488,
        0.0053193653002381325,
        0.1280307173728943,
        -0.0651196762919426,
        0.03770628944039345,
        0.08721984922885895,
        0.006984318140894175,
        -0.07069335132837296,
        0.04883270338177681,
        0.004975850228220224,
        -0.0008677096921019256,
        -0.01755893975496292,
        0.0488867312669754,
        0.05205724015831947,
        0.04362212121486664,
        -0.042630188167095184,
        0.027405839413404465,
        0.006061998195946217,
        -0.07030054926872253,
        0.007813691161572933,
        0.01306180004030466,
        -0.040201157331466675,
        0.00589786097407341,
        -0.11058811098337173,
        -0.049541860818862915,
        0.051441993564367294,
        0.009616130031645298,
        0.01228670496493578,
        -0.02513790689408779,
        0.0251515731215477,
        -0.01600678451359272,
        -0.05931771174073219,
        0.03662675619125366,
        -0.062486518174409866,
        0.06468568742275238,
        -0.017452983185648918,
        0.12390567362308502,
        0.045893993228673935,
        0.05540899187326431,
        -0.1540965586900711,
        0.02993066795170307,
        -0.01858929730951786,
        -0.00920256320387125,
        0.03258182853460312,
        0.019159629940986633,
        -0.01817089319229126,
        0.059253230690956116,
        -0.007679857779294252,
        -0.005643892101943493,
        -0.008779861964285374,
        -0.034726567566394806,
        -0.015613717027008533,
        0.10786712169647217,
        0.005330383777618408,
        -0.050494953989982605,
        -0.040759894996881485,
        0.06334061175584793,
        0.0042419955134391785,
        -0.05560310184955597,
        -0.03722899407148361,
        -0.05749121680855751,
        -0.0008782041259109974,
        0.07327215373516083,
        0.009645955637097359,
        -0.09980601072311401,
        -0.0021810894832015038,
        -0.02075485698878765,
        0.020301610231399536,
        -0.06742382794618607,
        0.062155116349458694,
        -0.05325078219175339,
        -0.037785232067108154,
        -0.03154700621962547,
        -0.04059096798300743,
        -0.05072175711393356,
        0.04198180139064789,
        -0.017656594514846802,
        0.04943219944834709,
        -0.14446774125099182,
        0.048240724951028824,
        0.03677051141858101,
        -0.09149843454360962,
        -0.019527826458215714,
        0.05218878760933876,
        0.06024728715419769,
        -0.059679169207811356,
        3.924688375963636e-33,
        0.026303423568606377,
        -0.0611751526594162,
        -0.09044414013624191,
        0.041231099516153336,
        -0.028610387817025185,
        -0.006242909003049135,
        -0.07109678536653519,
        -0.04834975674748421,
        -0.05540943518280983,
        0.10798412561416626,
        0.001754029537551105,
        -0.02185906656086445,
        0.02097652293741703,
        0.09693136811256409,
        -0.005110765341669321,
        -0.054813552647829056,
        0.04806103557348251,
        0.04791930690407753,
        0.020697245374321938,
        -0.0020595912355929613,
        0.007724554743617773,
        0.06942301243543625,
        -0.020396199077367783,
        -0.04594336450099945,
        -0.010637071914970875,
        0.06613714247941971,
        -0.043436311185359955,
        0.019098568707704544,
        -0.09614153951406479,
        0.006237952038645744,
        0.029606299474835396,
        0.061365291476249695,
        -0.07265621423721313,
        -0.03362078592181206,
        0.014200995676219463,
        0.07472731918096542,
        0.07645013183355331,
        0.08951292932033539,
        -0.048751264810562134,
        -0.01948644407093525,
        0.003460890846326947,
        0.035334113985300064,
        0.062433209270238876,
        0.04727357625961304,
        -0.0033838029485195875,
        0.025997020304203033,
        0.011215940117835999,
        -0.023623183369636536,
        -6.398795085260645e-05,
        0.03137754276394844,
        -0.08166313916444778,
        0.00881100445985794,
        -0.01577061228454113,
        -0.09368007630109787,
        0.0006349232280626893,
        -0.030241601169109344,
        -0.00882329698652029,
        0.004054569639265537,
        -0.013027249835431576,
        -0.003129958175122738,
        0.008856961503624916,
        0.04107210412621498,
        -0.059289950877428055,
        -0.010318799875676632,
        -0.03869657963514328,
        -0.03618885949254036,
        -0.04332132637500763,
        -0.05987735837697983,
        -0.006655481178313494,
        0.0008525718003511429,
        -0.07064212113618851,
        -0.04849839210510254,
        -0.1031193807721138,
        -0.04105456545948982,
        0.019051162526011467,
        0.05890580639243126,
        0.010618171654641628,
        0.01454708818346262,
        -0.026812223717570305,
        0.016812624409794807,
        -0.005103821866214275,
        -0.04309888929128647,
        0.06746149808168411,
        -0.00022603543766308576,
        -0.11302682012319565,
        -0.004253273364156485,
        -0.006969131529331207,
        0.07664960622787476,
        -0.027446703985333443,
        -0.0013327926862984896,
        -0.017911460250616074,
        0.00874472875148058,
        -0.06267330050468445,
        -7.499148341594264e-05,
        0.03491910174489021,
        -1.2897771739517339e-08,
        -0.05856429040431976,
        0.017841912806034088,
        -0.006787417456507683,
        -0.0212558601051569,
        0.007817022502422333,
        0.01691477745771408,
        -0.045882921665906906,
        0.010125851258635521,
        0.006397229619324207,
        0.019825529307127,
        0.1058925986289978,
        0.037463922053575516,
        0.050535622984170914,
        0.07716663181781769,
        0.07703691720962524,
        0.10415974259376526,
        0.024823034182190895,
        -0.01619294285774231,
        -0.0604865737259388,
        0.09043962508440018,
        0.03818661347031593,
        0.03292160481214523,
        -0.013422194868326187,
        -0.0867156833410263,
        -0.1051325649023056,
        0.05991976335644722,
        0.019204530864953995,
        -0.06428089737892151,
        0.040730178356170654,
        0.02347216196358204,
        0.08843614906072617,
        0.12094587832689285,
        -0.03390342742204666,
        0.031187988817691803,
        0.011396883055567741,
        -0.07580220699310303,
        0.030291540548205376,
        0.03046474978327751,
        0.035392846912145615,
        0.0022914183791726828,
        -0.02494012750685215,
        0.00799322035163641,
        0.05397622287273407,
        0.02320750057697296,
        -0.03523873910307884,
        0.022899260744452477,
        0.08755216002464294,
        -0.05383125692605972,
        0.004599562846124172,
        0.1469806283712387,
        0.053447261452674866,
        -0.009038865566253662,
        0.01966347172856331,
        0.04009230434894562,
        0.11334171146154404,
        -0.033457688987255096,
        0.01793670654296875,
        0.06408896297216415,
        -0.022312600165605545,
        0.04827035591006279,
        0.006330705713480711,
        -0.008212332613766193,
        -0.045386653393507004,
        0.009447531774640083
    ]

    results = await collection.query(
        query_embeddings=[sample_query_embedding],
        n_results=2  # top 2 results
    )

    # Print the results
    print("Query results:", results)

asyncio.run(test_query())




